{"version":3,"file":"angular-split.js","sources":["ng://angular-split/lib/utils.ts","ng://angular-split/lib/component/split.component.ts","ng://angular-split/lib/directive/splitArea.directive.ts","ng://angular-split/lib/module.ts"],"sourcesContent":["import { ElementRef } from '@angular/core'\n\nimport { IArea, IPoint, IAreaSnapshot, ISplitSideAbsorptionCapacity, IAreaAbsorptionCapacity } from './interface'\n\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {\n  // TouchEvent\n  if ((<TouchEvent>event).changedTouches !== undefined && (<TouchEvent>event).changedTouches.length > 0) {\n    return {\n      x: (<TouchEvent>event).changedTouches[0].clientX,\n      y: (<TouchEvent>event).changedTouches[0].clientY,\n    }\n  }\n  // MouseEvent\n  else if ((<MouseEvent>event).clientX !== undefined && (<MouseEvent>event).clientY !== undefined) {\n    return {\n      x: (<MouseEvent>event).clientX,\n      y: (<MouseEvent>event).clientY,\n    }\n  }\n  return null\n}\n\nexport function getElementPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\n  const rect = (<HTMLElement>elRef.nativeElement).getBoundingClientRect()\n\n  return direction === 'horizontal' ? rect.width : rect.height\n}\n\nexport function getInputBoolean(v: any): boolean {\n  return typeof v === 'boolean' ? v : v === 'false' ? false : true\n}\n\nexport function getInputPositiveNumber<T>(v: any, defaultValue: T): number | T {\n  if (v === null || v === undefined) return defaultValue\n\n  v = Number(v)\n  return !isNaN(v) && v >= 0 ? v : defaultValue\n}\n\nexport function isUserSizesValid(unit: 'percent' | 'pixel', sizes: Array<number | null>): boolean {\n  // All sizes have to be not null and total should be 100\n  if (unit === 'percent') {\n    const total = sizes.reduce((total, s) => (s !== null ? total + s : total), 0)\n    return sizes.every((s) => s !== null) && total > 99.9 && total < 100.1\n  }\n\n  // A size at null is mandatory but only one.\n  if (unit === 'pixel') {\n    return sizes.filter((s) => s === null).length === 1\n  }\n}\n\nexport function getAreaMinSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size\n  }\n\n  if (a.component.minSize === null) {\n    return null\n  }\n\n  if (a.component.minSize > a.size) {\n    return a.size\n  }\n\n  return a.component.minSize\n}\n\nexport function getAreaMaxSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size\n  }\n\n  if (a.component.maxSize === null) {\n    return null\n  }\n\n  if (a.component.maxSize < a.size) {\n    return a.size\n  }\n\n  return a.component.maxSize\n}\n\nexport function getGutterSideAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  sideAreas: Array<IAreaSnapshot>,\n  pixels: number,\n  allAreasSizePixel: number,\n): ISplitSideAbsorptionCapacity {\n  return sideAreas.reduce(\n    (acc, area) => {\n      const res = getAreaAbsorptionCapacity(unit, area, acc.remain, allAreasSizePixel)\n      acc.list.push(res)\n      acc.remain = res.pixelRemain\n      return acc\n    },\n    { remain: pixels, list: [] },\n  )\n}\n\nfunction getAreaAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number,\n): IAreaAbsorptionCapacity {\n  // No pain no gain\n  if (pixels === 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\n      pixelRemain: 0,\n    }\n  }\n\n  // Area start at zero and need to be reduced, not possible\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: 0,\n      pixelRemain: pixels,\n    }\n  }\n\n  if (unit === 'percent') {\n    return getAreaAbsorptionCapacityPercent(areaSnapshot, pixels, allAreasSizePixel)\n  }\n\n  if (unit === 'pixel') {\n    return getAreaAbsorptionCapacityPixel(areaSnapshot, pixels, allAreasSizePixel)\n  }\n}\n\nfunction getAreaAbsorptionCapacityPercent(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number,\n): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels\n  const tempPercentSize = (tempPixelSize / allAreasSizePixel) * 100\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPercentSize > areaSnapshot.area.maxSize) {\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\n      const maxSizePixel = (areaSnapshot.area.maxSize / 100) * allAreasSizePixel\n      return {\n        areaSnapshot,\n        pixelAbsorb: maxSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\n      pixelRemain: 0,\n    }\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPercentSize < areaSnapshot.area.minSize) {\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\n      const minSizePixel = (areaSnapshot.area.minSize / 100) * allAreasSizePixel\n      return {\n        areaSnapshot,\n        pixelAbsorb: minSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.minSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel,\n      }\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPercentSize < 0) {\n      // Use 0 as newPercentSize and return calculate pixels remaining\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: 0,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize,\n      pixelRemain: 0,\n    }\n  }\n}\n\nfunction getAreaAbsorptionCapacityPixel(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  containerSizePixel: number,\n): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPixelSize > areaSnapshot.area.maxSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    }\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPixelSize < areaSnapshot.area.minSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize,\n      }\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPixelSize < 0) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    }\n  }\n}\n\nexport function updateAreaSize(unit: 'percent' | 'pixel', item: IAreaAbsorptionCapacity) {\n  if (unit === 'percent') {\n    item.areaSnapshot.area.size = item.percentAfterAbsorption\n  } else if (unit === 'pixel') {\n    // Update size except for the wildcard size area\n    if (item.areaSnapshot.area.size !== null) {\n      item.areaSnapshot.area.size = item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  ElementRef,\n  NgZone,\n  ViewChildren,\n  QueryList,\n  EventEmitter,\n  ViewEncapsulation,\n} from '@angular/core'\nimport { Observable, Subscriber, Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\n\nimport { IArea, IPoint, ISplitSnapshot, IAreaSnapshot, IOutputData, IOutputAreaSizes } from '../interface'\nimport { SplitAreaDirective } from '../directive/splitArea.directive'\nimport {\n  getInputPositiveNumber,\n  getInputBoolean,\n  isUserSizesValid,\n  getAreaMinSize,\n  getAreaMaxSize,\n  getPointFromEvent,\n  getElementPixelSize,\n  getGutterSideAbsorptionCapacity,\n  updateAreaSize,\n} from '../utils'\n\n/**\n * angular-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *\n */\n\n@Component({\n  selector: 'as-split',\n  exportAs: 'asSplit',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [`./split.component.scss`],\n  template: ` <ng-content></ng-content>\n    <ng-template ngFor [ngForOf]=\"displayedAreas\" let-index=\"index\" let-last=\"last\">\n      <div\n        *ngIf=\"last === false\"\n        #gutterEls\n        class=\"as-split-gutter\"\n        [style.flex-basis.px]=\"gutterSize\"\n        [style.order]=\"index * 2 + 1\"\n        (mousedown)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (touchstart)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (mouseup)=\"clickGutter($event, index + 1)\"\n        (touchend)=\"clickGutter($event, index + 1)\"\n      >\n        <div class=\"as-split-gutter-icon\"></div>\n      </div>\n    </ng-template>`,\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class SplitComponent implements AfterViewInit, OnDestroy {\n  private _direction: 'horizontal' | 'vertical' = 'horizontal'\n\n  @Input() set direction(v: 'horizontal' | 'vertical') {\n    this._direction = v === 'vertical' ? 'vertical' : 'horizontal'\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._direction}`)\n    this.renderer.removeClass(\n      this.elRef.nativeElement,\n      `as-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`,\n    )\n\n    this.build(false, false)\n  }\n\n  get direction(): 'horizontal' | 'vertical' {\n    return this._direction\n  }\n\n  ////\n\n  private _unit: 'percent' | 'pixel' = 'percent'\n\n  @Input() set unit(v: 'percent' | 'pixel') {\n    this._unit = v === 'pixel' ? 'pixel' : 'percent'\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._unit}`)\n    this.renderer.removeClass(this.elRef.nativeElement, `as-${this._unit === 'pixel' ? 'percent' : 'pixel'}`)\n\n    this.build(false, true)\n  }\n\n  get unit(): 'percent' | 'pixel' {\n    return this._unit\n  }\n\n  ////\n\n  private _gutterSize: number = 11\n\n  @Input() set gutterSize(v: number | null) {\n    this._gutterSize = getInputPositiveNumber(v, 11)\n\n    this.build(false, false)\n  }\n\n  get gutterSize(): number {\n    return this._gutterSize\n  }\n\n  ////\n\n  private _gutterStep: number = 1\n\n  @Input() set gutterStep(v: number) {\n    this._gutterStep = getInputPositiveNumber(v, 1)\n  }\n\n  get gutterStep(): number {\n    return this._gutterStep\n  }\n\n  ////\n\n  private _restrictMove: boolean = false\n\n  @Input() set restrictMove(v: boolean) {\n    this._restrictMove = getInputBoolean(v)\n  }\n\n  get restrictMove(): boolean {\n    return this._restrictMove\n  }\n\n  ////\n\n  private _useTransition: boolean = false\n\n  @Input() set useTransition(v: boolean) {\n    this._useTransition = getInputBoolean(v)\n\n    if (this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'as-transition')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-transition')\n  }\n\n  get useTransition(): boolean {\n    return this._useTransition\n  }\n\n  ////\n\n  private _disabled: boolean = false\n\n  @Input() set disabled(v: boolean) {\n    this._disabled = getInputBoolean(v)\n\n    if (this._disabled) this.renderer.addClass(this.elRef.nativeElement, 'as-disabled')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-disabled')\n  }\n\n  get disabled(): boolean {\n    return this._disabled\n  }\n\n  ////\n\n  private _dir: 'ltr' | 'rtl' = 'ltr'\n\n  @Input() set dir(v: 'ltr' | 'rtl') {\n    this._dir = v === 'rtl' ? 'rtl' : 'ltr'\n\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir)\n  }\n\n  get dir(): 'ltr' | 'rtl' {\n    return this._dir\n  }\n\n  ////\n\n  private _gutterDblClickDuration: number = 0\n\n  @Input() set gutterDblClickDuration(v: number) {\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0)\n  }\n\n  get gutterDblClickDuration(): number {\n    return this._gutterDblClickDuration\n  }\n\n  ////\n\n  @Output() dragStart = new EventEmitter<IOutputData>(false)\n  @Output() dragEnd = new EventEmitter<IOutputData>(false)\n  @Output() gutterClick = new EventEmitter<IOutputData>(false)\n  @Output() gutterDblClick = new EventEmitter<IOutputData>(false)\n\n  private transitionEndSubscriber: Subscriber<IOutputAreaSizes>\n  @Output() get transitionEnd(): Observable<IOutputAreaSizes> {\n    return new Observable((subscriber) => (this.transitionEndSubscriber = subscriber)).pipe(\n      debounceTime<IOutputAreaSizes>(20),\n    )\n  }\n\n  private dragProgressSubject: Subject<IOutputData> = new Subject()\n  dragProgress$: Observable<IOutputData> = this.dragProgressSubject.asObservable()\n\n  ////\n\n  private isDragging: boolean = false\n  private isWaitingClear: boolean = false\n  private dragListeners: Array<Function> = []\n  private snapshot: ISplitSnapshot | null = null\n  private startPoint: IPoint | null = null\n  private endPoint: IPoint | null = null\n\n  public readonly displayedAreas: Array<IArea> = []\n  private readonly hidedAreas: Array<IArea> = []\n\n  @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>\n\n  constructor(\n    private ngZone: NgZone,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    private renderer: Renderer2,\n  ) {\n    // To force adding default class, could be override by user @Input() or not\n    this.direction = this._direction\n  }\n\n  public ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      // To avoid transition at first rendering\n      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'as-init'))\n    })\n  }\n\n  private getNbGutters(): number {\n    return this.displayedAreas.length === 0 ? 0 : this.displayedAreas.length - 1\n  }\n\n  public addArea(component: SplitAreaDirective): void {\n    const newArea: IArea = {\n      component,\n      order: 0,\n      size: 0,\n      minSize: null,\n      maxSize: null,\n    }\n\n    if (component.visible === true) {\n      this.displayedAreas.push(newArea)\n\n      this.build(true, true)\n    } else {\n      this.hidedAreas.push(newArea)\n    }\n  }\n\n  public removeArea(component: SplitAreaDirective): void {\n    if (this.displayedAreas.some((a) => a.component === component)) {\n      const area = this.displayedAreas.find((a) => a.component === component)\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1)\n\n      this.build(true, true)\n    } else if (this.hidedAreas.some((a) => a.component === component)) {\n      const area = this.hidedAreas.find((a) => a.component === component)\n      this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1)\n    }\n  }\n\n  public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\n    if (component.visible === true) {\n      this.build(resetOrders, resetSizes)\n    }\n  }\n\n  public showArea(component: SplitAreaDirective): void {\n    const area = this.hidedAreas.find((a) => a.component === component)\n    if (area === undefined) {\n      return\n    }\n\n    const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1)\n    this.displayedAreas.push(...areas)\n\n    this.build(true, true)\n  }\n\n  public hideArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find((a) => a.component === comp)\n    if (area === undefined) {\n      return\n    }\n\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1)\n    areas.forEach((area) => {\n      area.order = 0\n      area.size = 0\n    })\n    this.hidedAreas.push(...areas)\n\n    this.build(true, true)\n  }\n\n  public getVisibleAreaSizes(): IOutputAreaSizes {\n    return this.displayedAreas.map((a) => (a.size === null ? '*' : a.size))\n  }\n\n  public setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\n    if (sizes.length !== this.displayedAreas.length) {\n      return false\n    }\n\n    const formatedSizes = sizes.map((s) => getInputPositiveNumber(s, null))\n    const isValid = isUserSizesValid(this.unit, formatedSizes)\n\n    if (isValid === false) {\n      return false\n    }\n\n    // @ts-ignore\n    this.displayedAreas.forEach((area, i) => (area.component._size = formatedSizes[i]))\n\n    this.build(false, true)\n    return true\n  }\n\n  private build(resetOrders: boolean, resetSizes: boolean): void {\n    this.stopDragging()\n\n    // Â¤ AREAS ORDER\n\n    if (resetOrders === true) {\n      // If user provided 'order' for each area, use it to sort them.\n      if (this.displayedAreas.every((a) => a.component.order !== null)) {\n        this.displayedAreas.sort((a, b) => <number>a.component.order - <number>b.component.order)\n      }\n\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\n      this.displayedAreas.forEach((area, i) => {\n        area.order = i * 2\n        area.component.setStyleOrder(area.order)\n      })\n    }\n\n    // Â¤ AREAS SIZE\n\n    if (resetSizes === true) {\n      const useUserSizes = isUserSizesValid(\n        this.unit,\n        this.displayedAreas.map((a) => a.component.size),\n      )\n\n      switch (this.unit) {\n        case 'percent': {\n          const defaultSize = 100 / this.displayedAreas.length\n\n          this.displayedAreas.forEach((area) => {\n            area.size = useUserSizes ? <number>area.component.size : defaultSize\n            area.minSize = getAreaMinSize(area)\n            area.maxSize = getAreaMaxSize(area)\n          })\n          break\n        }\n        case 'pixel': {\n          if (useUserSizes) {\n            this.displayedAreas.forEach((area) => {\n              area.size = area.component.size\n              area.minSize = getAreaMinSize(area)\n              area.maxSize = getAreaMaxSize(area)\n            })\n          } else {\n            const wildcardSizeAreas = this.displayedAreas.filter((a) => a.component.size === null)\n\n            // No wildcard area > Need to select one arbitrarily > first\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\n              this.displayedAreas.forEach((area, i) => {\n                area.size = i === 0 ? null : area.component.size\n                area.minSize = i === 0 ? null : getAreaMinSize(area)\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area)\n              })\n            }\n            // More than one wildcard area > Need to keep only one arbitrarly > first\n            else if (wildcardSizeAreas.length > 1) {\n              let alreadyGotOne = false\n              this.displayedAreas.forEach((area) => {\n                if (area.component.size === null) {\n                  if (alreadyGotOne === false) {\n                    area.size = null\n                    area.minSize = null\n                    area.maxSize = null\n                    alreadyGotOne = true\n                  } else {\n                    area.size = 100\n                    area.minSize = null\n                    area.maxSize = null\n                  }\n                } else {\n                  area.size = area.component.size\n                  area.minSize = getAreaMinSize(area)\n                  area.maxSize = getAreaMaxSize(area)\n                }\n              })\n            }\n          }\n          break\n        }\n      }\n    }\n\n    this.refreshStyleSizes()\n    this.cdRef.markForCheck()\n  }\n\n  private refreshStyleSizes(): void {\n    ///////////////////////////////////////////\n    // PERCENT MODE\n    if (this.unit === 'percent') {\n      // Only one area > flex-basis 100%\n      if (this.displayedAreas.length === 1) {\n        this.displayedAreas[0].component.setStyleFlex(0, 0, `100%`, false, false)\n      }\n      // Multiple areas > use each percent basis\n      else {\n        const sumGutterSize = this.getNbGutters() * this.gutterSize\n\n        this.displayedAreas.forEach((area) => {\n          area.component.setStyleFlex(\n            0,\n            0,\n            `calc( ${area.size}% - ${(<number>area.size / 100) * sumGutterSize}px )`,\n            area.minSize !== null && area.minSize === area.size ? true : false,\n            area.maxSize !== null && area.maxSize === area.size ? true : false,\n          )\n        })\n      }\n    }\n    ///////////////////////////////////////////\n    // PIXEL MODE\n    else if (this.unit === 'pixel') {\n      this.displayedAreas.forEach((area) => {\n        // Area with wildcard size\n        if (area.size === null) {\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(1, 1, `100%`, false, false)\n          } else {\n            area.component.setStyleFlex(1, 1, `auto`, false, false)\n          }\n        }\n        // Area with pixel size\n        else {\n          // Only one area > flex-basis 100%\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(0, 0, `100%`, false, false)\n          }\n          // Multiple areas > use each pixel basis\n          else {\n            area.component.setStyleFlex(\n              0,\n              0,\n              `${area.size}px`,\n              area.minSize !== null && area.minSize === area.size ? true : false,\n              area.maxSize !== null && area.maxSize === area.size ? true : false,\n            )\n          }\n        }\n      })\n    }\n  }\n\n  _clickTimeout: number | null = null\n\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\n    const tempPoint = getPointFromEvent(event)\n\n    // Be sure mouseup/touchend happened at same point as mousedown/touchstart to trigger click/dblclick\n    if (this.startPoint && this.startPoint.x === tempPoint.x && this.startPoint.y === tempPoint.y) {\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\n      if (this._clickTimeout !== null) {\n        window.clearTimeout(this._clickTimeout)\n        this._clickTimeout = null\n        this.notify('dblclick', gutterNum)\n        this.stopDragging()\n      }\n      // Else start timeout to call clickEvent at end\n      else {\n        this._clickTimeout = window.setTimeout(() => {\n          this._clickTimeout = null\n          this.notify('click', gutterNum)\n          this.stopDragging()\n        }, this.gutterDblClickDuration)\n      }\n    }\n  }\n\n  public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.startPoint = getPointFromEvent(event)\n    if (this.startPoint === null || this.disabled === true || this.isWaitingClear === true) {\n      return\n    }\n\n    this.snapshot = {\n      gutterNum,\n      lastSteppedOffset: 0,\n      allAreasSizePixel: getElementPixelSize(this.elRef, this.direction) - this.getNbGutters() * this.gutterSize,\n      allInvolvedAreasSizePercent: 100,\n      areasBeforeGutter: [],\n      areasAfterGutter: [],\n    }\n\n    this.displayedAreas.forEach((area) => {\n      const areaSnapshot: IAreaSnapshot = {\n        area,\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, this.direction),\n        sizePercentAtStart: this.unit === 'percent' ? area.size : -1, // If pixel mode, anyway, will not be used.\n      }\n\n      if (area.order < gutterOrder) {\n        if (this.restrictMove === true) {\n          this.snapshot.areasBeforeGutter = [areaSnapshot]\n        } else {\n          this.snapshot.areasBeforeGutter.unshift(areaSnapshot)\n        }\n      } else if (area.order > gutterOrder) {\n        if (this.restrictMove === true) {\n          if (this.snapshot.areasAfterGutter.length === 0) this.snapshot.areasAfterGutter = [areaSnapshot]\n        } else {\n          this.snapshot.areasAfterGutter.push(areaSnapshot)\n        }\n      }\n    })\n\n    this.snapshot.allInvolvedAreasSizePercent = [\n      ...this.snapshot.areasBeforeGutter,\n      ...this.snapshot.areasAfterGutter,\n    ].reduce((t, a) => t + a.sizePercentAtStart, 0)\n\n    if (this.snapshot.areasBeforeGutter.length === 0 || this.snapshot.areasAfterGutter.length === 0) {\n      return\n    }\n\n    this.dragListeners.push(this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)))\n    this.dragListeners.push(this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)))\n    this.dragListeners.push(this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)))\n\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(this.renderer.listen('document', 'mousemove', this.dragEvent.bind(this)))\n      this.dragListeners.push(this.renderer.listen('document', 'touchmove', this.dragEvent.bind(this)))\n    })\n\n    this.displayedAreas.forEach((area) => area.component.lockEvents())\n\n    this.isDragging = true\n    this.renderer.addClass(this.elRef.nativeElement, 'as-dragging')\n    this.renderer.addClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged')\n\n    this.notify('start', this.snapshot.gutterNum)\n  }\n\n  private dragEvent(event: MouseEvent | TouchEvent): void {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this._clickTimeout !== null) {\n      window.clearTimeout(this._clickTimeout)\n      this._clickTimeout = null\n    }\n\n    if (this.isDragging === false) {\n      return\n    }\n\n    this.endPoint = getPointFromEvent(event)\n    if (this.endPoint === null) {\n      return\n    }\n\n    // Calculate steppedOffset\n\n    let offset =\n      this.direction === 'horizontal' ? this.startPoint.x - this.endPoint.x : this.startPoint.y - this.endPoint.y\n    if (this.dir === 'rtl') {\n      offset = -offset\n    }\n    const steppedOffset = Math.round(offset / this.gutterStep) * this.gutterStep\n\n    if (steppedOffset === this.snapshot.lastSteppedOffset) {\n      return\n    }\n\n    this.snapshot.lastSteppedOffset = steppedOffset\n\n    // Need to know if each gutter side areas could reacts to steppedOffset\n\n    let areasBefore = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasBeforeGutter,\n      -steppedOffset,\n      this.snapshot.allAreasSizePixel,\n    )\n    let areasAfter = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasAfterGutter,\n      steppedOffset,\n      this.snapshot.allAreasSizePixel,\n    )\n\n    // Each gutter side areas can't absorb all offset\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\n        areasAfter = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasAfterGutter,\n          steppedOffset + areasBefore.remain,\n          this.snapshot.allAreasSizePixel,\n        )\n      } else {\n        areasBefore = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasBeforeGutter,\n          -(steppedOffset - areasAfter.remain),\n          this.snapshot.allAreasSizePixel,\n        )\n      }\n    }\n    // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\n    else if (areasBefore.remain !== 0) {\n      areasAfter = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasAfterGutter,\n        steppedOffset + areasBefore.remain,\n        this.snapshot.allAreasSizePixel,\n      )\n    }\n    // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\n    else if (areasAfter.remain !== 0) {\n      areasBefore = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasBeforeGutter,\n        -(steppedOffset - areasAfter.remain),\n        this.snapshot.allAreasSizePixel,\n      )\n    }\n\n    if (this.unit === 'percent') {\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\n      const all = [...areasBefore.list, ...areasAfter.list]\n      const areaToReset = all.find(\n        (a) =>\n          a.percentAfterAbsorption !== 0 &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize,\n      )\n\n      if (areaToReset) {\n        areaToReset.percentAfterAbsorption =\n          this.snapshot.allInvolvedAreasSizePercent -\n          all.filter((a) => a !== areaToReset).reduce((total, a) => total + a.percentAfterAbsorption, 0)\n      }\n    }\n\n    // Now we know areas could absorb steppedOffset, time to really update sizes\n\n    areasBefore.list.forEach((item) => updateAreaSize(this.unit, item))\n    areasAfter.list.forEach((item) => updateAreaSize(this.unit, item))\n\n    this.refreshStyleSizes()\n    this.notify('progress', this.snapshot.gutterNum)\n  }\n\n  private stopDragging(event?: Event): void {\n    if (event) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    if (this.isDragging === false) {\n      return\n    }\n\n    this.displayedAreas.forEach((area) => area.component.unlockEvents())\n\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop()\n      if (fct) fct()\n    }\n\n    // Warning: Have to be before \"notify('end')\"\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\n    this.isDragging = false\n\n    // If moved from starting point, notify end\n    if (this.endPoint && (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)) {\n      this.notify('end', this.snapshot.gutterNum)\n    }\n\n    this.renderer.removeClass(this.elRef.nativeElement, 'as-dragging')\n    this.renderer.removeClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged')\n    this.snapshot = null\n    this.isWaitingClear = true\n\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.startPoint = null\n        this.endPoint = null\n        this.isWaitingClear = false\n      })\n    })\n  }\n\n  public notify(type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd', gutterNum: number): void {\n    const sizes = this.getVisibleAreaSizes()\n\n    if (type === 'start') {\n      this.dragStart.emit({ gutterNum, sizes })\n    } else if (type === 'end') {\n      this.dragEnd.emit({ gutterNum, sizes })\n    } else if (type === 'click') {\n      this.gutterClick.emit({ gutterNum, sizes })\n    } else if (type === 'dblclick') {\n      this.gutterDblClick.emit({ gutterNum, sizes })\n    } else if (type === 'transitionEnd') {\n      if (this.transitionEndSubscriber) {\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes))\n      }\n    } else if (type === 'progress') {\n      // Stay outside zone to allow users do what they want about change detection mechanism.\n      this.dragProgressSubject.next({ gutterNum, sizes })\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.stopDragging()\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core'\n\nimport { SplitComponent } from '../component/split.component'\nimport { getInputPositiveNumber, getInputBoolean } from '../utils'\n\n@Directive({\n  selector: 'as-split-area, [as-split-area]',\n  exportAs: 'asSplitArea',\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n  private _order: number | null = null\n\n  @Input() set order(v: number | null) {\n    this._order = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, true, false)\n  }\n\n  get order(): number | null {\n    return this._order\n  }\n\n  ////\n\n  private _size: number | null = null\n\n  @Input() set size(v: number | null) {\n    this._size = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get size(): number | null {\n    return this._size\n  }\n\n  ////\n\n  private _minSize: number | null = null\n\n  @Input() set minSize(v: number | null) {\n    this._minSize = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get minSize(): number | null {\n    return this._minSize\n  }\n\n  ////\n\n  private _maxSize: number | null = null\n\n  @Input() set maxSize(v: number | null) {\n    this._maxSize = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get maxSize(): number | null {\n    return this._maxSize\n  }\n\n  ////\n\n  private _lockSize: boolean = false\n\n  @Input() set lockSize(v: boolean) {\n    this._lockSize = getInputBoolean(v)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get lockSize(): boolean {\n    return this._lockSize\n  }\n\n  ////\n\n  private _visible: boolean = true\n\n  @Input() set visible(v: boolean) {\n    this._visible = getInputBoolean(v)\n\n    if (this._visible) {\n      this.split.showArea(this)\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-hidden')\n    } else {\n      this.split.hideArea(this)\n      this.renderer.addClass(this.elRef.nativeElement, 'as-hidden')\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible\n  }\n\n  ////\n\n  private transitionListener: Function\n  private readonly lockListeners: Array<Function> = []\n\n  constructor(\n    private ngZone: NgZone,\n    public elRef: ElementRef,\n    private renderer: Renderer2,\n    private split: SplitComponent,\n  ) {\n    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area')\n  }\n\n  public ngOnInit(): void {\n    this.split.addArea(this)\n\n    this.ngZone.runOutsideAngular(() => {\n      this.transitionListener = this.renderer.listen(\n        this.elRef.nativeElement,\n        'transitionend',\n        (event: TransitionEvent) => {\n          // Limit only flex-basis transition to trigger the event\n          if (event.propertyName === 'flex-basis') {\n            this.split.notify('transitionEnd', -1)\n          }\n        },\n      )\n    })\n  }\n\n  public setStyleOrder(value: number): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value)\n  }\n\n  public setStyleFlex(grow: number, shrink: number, basis: string, isMin: boolean, isMax: boolean): void {\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis)\n\n    if (isMin === true) this.renderer.addClass(this.elRef.nativeElement, 'as-min')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-min')\n\n    if (isMax === true) this.renderer.addClass(this.elRef.nativeElement, 'as-max')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-max')\n  }\n\n  public lockEvents(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false))\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false))\n    })\n  }\n\n  public unlockEvents(): void {\n    while (this.lockListeners.length > 0) {\n      const fct = this.lockListeners.pop()\n      if (fct) fct()\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unlockEvents()\n\n    if (this.transitionListener) {\n      this.transitionListener()\n    }\n\n    this.split.removeArea(this)\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { SplitComponent } from './component/split.component'\nimport { SplitAreaDirective } from './directive/splitArea.directive'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SplitComponent, SplitAreaDirective],\n  exports: [SplitComponent, SplitAreaDirective],\n})\nexport class AngularSplitModule {\n  public static forRoot(): ModuleWithProviders<AngularSplitModule> {\n    return {\n      ngModule: AngularSplitModule,\n      providers: [],\n    }\n  }\n\n  public static forChild(): ModuleWithProviders<AngularSplitModule> {\n    return {\n      ngModule: AngularSplitModule,\n      providers: [],\n    }\n  }\n}\n"],"names":["tslib_1.__spread"],"mappings":"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"}