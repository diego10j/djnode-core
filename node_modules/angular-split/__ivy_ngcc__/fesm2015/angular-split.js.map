{"version":3,"file":"angular-split.js","sources":["ng:/angular-split/lib/utils.ts","ng:/angular-split/lib/component/split.component.ts","ng:/angular-split/lib/directive/splitArea.directive.ts","ng:/angular-split/lib/module.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef } from '@angular/core'\n\nimport { IArea, IPoint, IAreaSnapshot, ISplitSideAbsorptionCapacity, IAreaAbsorptionCapacity } from './interface'\n\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {\n  // TouchEvent\n  if ((<TouchEvent>event).changedTouches !== undefined && (<TouchEvent>event).changedTouches.length > 0) {\n    return {\n      x: (<TouchEvent>event).changedTouches[0].clientX,\n      y: (<TouchEvent>event).changedTouches[0].clientY,\n    }\n  }\n  // MouseEvent\n  else if ((<MouseEvent>event).clientX !== undefined && (<MouseEvent>event).clientY !== undefined) {\n    return {\n      x: (<MouseEvent>event).clientX,\n      y: (<MouseEvent>event).clientY,\n    }\n  }\n  return null\n}\n\nexport function getElementPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\n  const rect = (<HTMLElement>elRef.nativeElement).getBoundingClientRect()\n\n  return direction === 'horizontal' ? rect.width : rect.height\n}\n\nexport function getInputBoolean(v: any): boolean {\n  return typeof v === 'boolean' ? v : v === 'false' ? false : true\n}\n\nexport function getInputPositiveNumber<T>(v: any, defaultValue: T): number | T {\n  if (v === null || v === undefined) return defaultValue\n\n  v = Number(v)\n  return !isNaN(v) && v >= 0 ? v : defaultValue\n}\n\nexport function isUserSizesValid(unit: 'percent' | 'pixel', sizes: Array<number | null>): boolean {\n  // All sizes have to be not null and total should be 100\n  if (unit === 'percent') {\n    const total = sizes.reduce((total, s) => (s !== null ? total + s : total), 0)\n    return sizes.every((s) => s !== null) && total > 99.9 && total < 100.1\n  }\n\n  // A size at null is mandatory but only one.\n  if (unit === 'pixel') {\n    return sizes.filter((s) => s === null).length === 1\n  }\n}\n\nexport function getAreaMinSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size\n  }\n\n  if (a.component.minSize === null) {\n    return null\n  }\n\n  if (a.component.minSize > a.size) {\n    return a.size\n  }\n\n  return a.component.minSize\n}\n\nexport function getAreaMaxSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size\n  }\n\n  if (a.component.maxSize === null) {\n    return null\n  }\n\n  if (a.component.maxSize < a.size) {\n    return a.size\n  }\n\n  return a.component.maxSize\n}\n\nexport function getGutterSideAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  sideAreas: Array<IAreaSnapshot>,\n  pixels: number,\n  allAreasSizePixel: number,\n): ISplitSideAbsorptionCapacity {\n  return sideAreas.reduce(\n    (acc, area) => {\n      const res = getAreaAbsorptionCapacity(unit, area, acc.remain, allAreasSizePixel)\n      acc.list.push(res)\n      acc.remain = res.pixelRemain\n      return acc\n    },\n    { remain: pixels, list: [] },\n  )\n}\n\nfunction getAreaAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number,\n): IAreaAbsorptionCapacity {\n  // No pain no gain\n  if (pixels === 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\n      pixelRemain: 0,\n    }\n  }\n\n  // Area start at zero and need to be reduced, not possible\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: 0,\n      pixelRemain: pixels,\n    }\n  }\n\n  if (unit === 'percent') {\n    return getAreaAbsorptionCapacityPercent(areaSnapshot, pixels, allAreasSizePixel)\n  }\n\n  if (unit === 'pixel') {\n    return getAreaAbsorptionCapacityPixel(areaSnapshot, pixels, allAreasSizePixel)\n  }\n}\n\nfunction getAreaAbsorptionCapacityPercent(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number,\n): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels\n  const tempPercentSize = (tempPixelSize / allAreasSizePixel) * 100\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPercentSize > areaSnapshot.area.maxSize) {\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\n      const maxSizePixel = (areaSnapshot.area.maxSize / 100) * allAreasSizePixel\n      return {\n        areaSnapshot,\n        pixelAbsorb: maxSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\n      pixelRemain: 0,\n    }\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPercentSize < areaSnapshot.area.minSize) {\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\n      const minSizePixel = (areaSnapshot.area.minSize / 100) * allAreasSizePixel\n      return {\n        areaSnapshot,\n        pixelAbsorb: minSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.minSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel,\n      }\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPercentSize < 0) {\n      // Use 0 as newPercentSize and return calculate pixels remaining\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: 0,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize,\n      pixelRemain: 0,\n    }\n  }\n}\n\nfunction getAreaAbsorptionCapacityPixel(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  containerSizePixel: number,\n): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPixelSize > areaSnapshot.area.maxSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    }\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPixelSize < areaSnapshot.area.minSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize,\n      }\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPixelSize < 0) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    }\n  }\n}\n\nexport function updateAreaSize(unit: 'percent' | 'pixel', item: IAreaAbsorptionCapacity) {\n  if (unit === 'percent') {\n    item.areaSnapshot.area.size = item.percentAfterAbsorption\n  } else if (unit === 'pixel') {\n    // Update size except for the wildcard size area\n    if (item.areaSnapshot.area.size !== null) {\n      item.areaSnapshot.area.size = item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  ElementRef,\n  NgZone,\n  ViewChildren,\n  QueryList,\n  EventEmitter,\n  ViewEncapsulation,\n} from '@angular/core'\nimport { Observable, Subscriber, Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\n\nimport { IArea, IPoint, ISplitSnapshot, IAreaSnapshot, IOutputData, IOutputAreaSizes } from '../interface'\nimport { SplitAreaDirective } from '../directive/splitArea.directive'\nimport {\n  getInputPositiveNumber,\n  getInputBoolean,\n  isUserSizesValid,\n  getAreaMinSize,\n  getAreaMaxSize,\n  getPointFromEvent,\n  getElementPixelSize,\n  getGutterSideAbsorptionCapacity,\n  updateAreaSize,\n} from '../utils'\n\n/**\n * angular-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *\n */\n\n@Component({\n  selector: 'as-split',\n  exportAs: 'asSplit',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [`./split.component.scss`],\n  template: ` <ng-content></ng-content>\n    <ng-template ngFor [ngForOf]=\"displayedAreas\" let-index=\"index\" let-last=\"last\">\n      <div\n        *ngIf=\"last === false\"\n        #gutterEls\n        class=\"as-split-gutter\"\n        [style.flex-basis.px]=\"gutterSize\"\n        [style.order]=\"index * 2 + 1\"\n        (mousedown)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (touchstart)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (mouseup)=\"clickGutter($event, index + 1)\"\n        (touchend)=\"clickGutter($event, index + 1)\"\n      >\n        <div class=\"as-split-gutter-icon\"></div>\n      </div>\n    </ng-template>`,\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class SplitComponent implements AfterViewInit, OnDestroy {\n  private _direction: 'horizontal' | 'vertical' = 'horizontal'\n\n  @Input() set direction(v: 'horizontal' | 'vertical') {\n    this._direction = v === 'vertical' ? 'vertical' : 'horizontal'\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._direction}`)\n    this.renderer.removeClass(\n      this.elRef.nativeElement,\n      `as-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`,\n    )\n\n    this.build(false, false)\n  }\n\n  get direction(): 'horizontal' | 'vertical' {\n    return this._direction\n  }\n\n  ////\n\n  private _unit: 'percent' | 'pixel' = 'percent'\n\n  @Input() set unit(v: 'percent' | 'pixel') {\n    this._unit = v === 'pixel' ? 'pixel' : 'percent'\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._unit}`)\n    this.renderer.removeClass(this.elRef.nativeElement, `as-${this._unit === 'pixel' ? 'percent' : 'pixel'}`)\n\n    this.build(false, true)\n  }\n\n  get unit(): 'percent' | 'pixel' {\n    return this._unit\n  }\n\n  ////\n\n  private _gutterSize: number = 11\n\n  @Input() set gutterSize(v: number | null) {\n    this._gutterSize = getInputPositiveNumber(v, 11)\n\n    this.build(false, false)\n  }\n\n  get gutterSize(): number {\n    return this._gutterSize\n  }\n\n  ////\n\n  private _gutterStep: number = 1\n\n  @Input() set gutterStep(v: number) {\n    this._gutterStep = getInputPositiveNumber(v, 1)\n  }\n\n  get gutterStep(): number {\n    return this._gutterStep\n  }\n\n  ////\n\n  private _restrictMove: boolean = false\n\n  @Input() set restrictMove(v: boolean) {\n    this._restrictMove = getInputBoolean(v)\n  }\n\n  get restrictMove(): boolean {\n    return this._restrictMove\n  }\n\n  ////\n\n  private _useTransition: boolean = false\n\n  @Input() set useTransition(v: boolean) {\n    this._useTransition = getInputBoolean(v)\n\n    if (this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'as-transition')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-transition')\n  }\n\n  get useTransition(): boolean {\n    return this._useTransition\n  }\n\n  ////\n\n  private _disabled: boolean = false\n\n  @Input() set disabled(v: boolean) {\n    this._disabled = getInputBoolean(v)\n\n    if (this._disabled) this.renderer.addClass(this.elRef.nativeElement, 'as-disabled')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-disabled')\n  }\n\n  get disabled(): boolean {\n    return this._disabled\n  }\n\n  ////\n\n  private _dir: 'ltr' | 'rtl' = 'ltr'\n\n  @Input() set dir(v: 'ltr' | 'rtl') {\n    this._dir = v === 'rtl' ? 'rtl' : 'ltr'\n\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir)\n  }\n\n  get dir(): 'ltr' | 'rtl' {\n    return this._dir\n  }\n\n  ////\n\n  private _gutterDblClickDuration: number = 0\n\n  @Input() set gutterDblClickDuration(v: number) {\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0)\n  }\n\n  get gutterDblClickDuration(): number {\n    return this._gutterDblClickDuration\n  }\n\n  ////\n\n  @Output() dragStart = new EventEmitter<IOutputData>(false)\n  @Output() dragEnd = new EventEmitter<IOutputData>(false)\n  @Output() gutterClick = new EventEmitter<IOutputData>(false)\n  @Output() gutterDblClick = new EventEmitter<IOutputData>(false)\n\n  private transitionEndSubscriber: Subscriber<IOutputAreaSizes>\n  @Output() get transitionEnd(): Observable<IOutputAreaSizes> {\n    return new Observable((subscriber) => (this.transitionEndSubscriber = subscriber)).pipe(\n      debounceTime<IOutputAreaSizes>(20),\n    )\n  }\n\n  private dragProgressSubject: Subject<IOutputData> = new Subject()\n  dragProgress$: Observable<IOutputData> = this.dragProgressSubject.asObservable()\n\n  ////\n\n  private isDragging: boolean = false\n  private isWaitingClear: boolean = false\n  private dragListeners: Array<Function> = []\n  private snapshot: ISplitSnapshot | null = null\n  private startPoint: IPoint | null = null\n  private endPoint: IPoint | null = null\n\n  public readonly displayedAreas: Array<IArea> = []\n  private readonly hidedAreas: Array<IArea> = []\n\n  @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>\n\n  constructor(\n    private ngZone: NgZone,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    private renderer: Renderer2,\n  ) {\n    // To force adding default class, could be override by user @Input() or not\n    this.direction = this._direction\n  }\n\n  public ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      // To avoid transition at first rendering\n      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'as-init'))\n    })\n  }\n\n  private getNbGutters(): number {\n    return this.displayedAreas.length === 0 ? 0 : this.displayedAreas.length - 1\n  }\n\n  public addArea(component: SplitAreaDirective): void {\n    const newArea: IArea = {\n      component,\n      order: 0,\n      size: 0,\n      minSize: null,\n      maxSize: null,\n    }\n\n    if (component.visible === true) {\n      this.displayedAreas.push(newArea)\n\n      this.build(true, true)\n    } else {\n      this.hidedAreas.push(newArea)\n    }\n  }\n\n  public removeArea(component: SplitAreaDirective): void {\n    if (this.displayedAreas.some((a) => a.component === component)) {\n      const area = this.displayedAreas.find((a) => a.component === component)\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1)\n\n      this.build(true, true)\n    } else if (this.hidedAreas.some((a) => a.component === component)) {\n      const area = this.hidedAreas.find((a) => a.component === component)\n      this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1)\n    }\n  }\n\n  public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\n    if (component.visible === true) {\n      this.build(resetOrders, resetSizes)\n    }\n  }\n\n  public showArea(component: SplitAreaDirective): void {\n    const area = this.hidedAreas.find((a) => a.component === component)\n    if (area === undefined) {\n      return\n    }\n\n    const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1)\n    this.displayedAreas.push(...areas)\n\n    this.build(true, true)\n  }\n\n  public hideArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find((a) => a.component === comp)\n    if (area === undefined) {\n      return\n    }\n\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1)\n    areas.forEach((area) => {\n      area.order = 0\n      area.size = 0\n    })\n    this.hidedAreas.push(...areas)\n\n    this.build(true, true)\n  }\n\n  public getVisibleAreaSizes(): IOutputAreaSizes {\n    return this.displayedAreas.map((a) => (a.size === null ? '*' : a.size))\n  }\n\n  public setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\n    if (sizes.length !== this.displayedAreas.length) {\n      return false\n    }\n\n    const formatedSizes = sizes.map((s) => getInputPositiveNumber(s, null))\n    const isValid = isUserSizesValid(this.unit, formatedSizes)\n\n    if (isValid === false) {\n      return false\n    }\n\n    // @ts-ignore\n    this.displayedAreas.forEach((area, i) => (area.component._size = formatedSizes[i]))\n\n    this.build(false, true)\n    return true\n  }\n\n  private build(resetOrders: boolean, resetSizes: boolean): void {\n    this.stopDragging()\n\n    // Â¤ AREAS ORDER\n\n    if (resetOrders === true) {\n      // If user provided 'order' for each area, use it to sort them.\n      if (this.displayedAreas.every((a) => a.component.order !== null)) {\n        this.displayedAreas.sort((a, b) => <number>a.component.order - <number>b.component.order)\n      }\n\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\n      this.displayedAreas.forEach((area, i) => {\n        area.order = i * 2\n        area.component.setStyleOrder(area.order)\n      })\n    }\n\n    // Â¤ AREAS SIZE\n\n    if (resetSizes === true) {\n      const useUserSizes = isUserSizesValid(\n        this.unit,\n        this.displayedAreas.map((a) => a.component.size),\n      )\n\n      switch (this.unit) {\n        case 'percent': {\n          const defaultSize = 100 / this.displayedAreas.length\n\n          this.displayedAreas.forEach((area) => {\n            area.size = useUserSizes ? <number>area.component.size : defaultSize\n            area.minSize = getAreaMinSize(area)\n            area.maxSize = getAreaMaxSize(area)\n          })\n          break\n        }\n        case 'pixel': {\n          if (useUserSizes) {\n            this.displayedAreas.forEach((area) => {\n              area.size = area.component.size\n              area.minSize = getAreaMinSize(area)\n              area.maxSize = getAreaMaxSize(area)\n            })\n          } else {\n            const wildcardSizeAreas = this.displayedAreas.filter((a) => a.component.size === null)\n\n            // No wildcard area > Need to select one arbitrarily > first\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\n              this.displayedAreas.forEach((area, i) => {\n                area.size = i === 0 ? null : area.component.size\n                area.minSize = i === 0 ? null : getAreaMinSize(area)\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area)\n              })\n            }\n            // More than one wildcard area > Need to keep only one arbitrarly > first\n            else if (wildcardSizeAreas.length > 1) {\n              let alreadyGotOne = false\n              this.displayedAreas.forEach((area) => {\n                if (area.component.size === null) {\n                  if (alreadyGotOne === false) {\n                    area.size = null\n                    area.minSize = null\n                    area.maxSize = null\n                    alreadyGotOne = true\n                  } else {\n                    area.size = 100\n                    area.minSize = null\n                    area.maxSize = null\n                  }\n                } else {\n                  area.size = area.component.size\n                  area.minSize = getAreaMinSize(area)\n                  area.maxSize = getAreaMaxSize(area)\n                }\n              })\n            }\n          }\n          break\n        }\n      }\n    }\n\n    this.refreshStyleSizes()\n    this.cdRef.markForCheck()\n  }\n\n  private refreshStyleSizes(): void {\n    ///////////////////////////////////////////\n    // PERCENT MODE\n    if (this.unit === 'percent') {\n      // Only one area > flex-basis 100%\n      if (this.displayedAreas.length === 1) {\n        this.displayedAreas[0].component.setStyleFlex(0, 0, `100%`, false, false)\n      }\n      // Multiple areas > use each percent basis\n      else {\n        const sumGutterSize = this.getNbGutters() * this.gutterSize\n\n        this.displayedAreas.forEach((area) => {\n          area.component.setStyleFlex(\n            0,\n            0,\n            `calc( ${area.size}% - ${(<number>area.size / 100) * sumGutterSize}px )`,\n            area.minSize !== null && area.minSize === area.size ? true : false,\n            area.maxSize !== null && area.maxSize === area.size ? true : false,\n          )\n        })\n      }\n    }\n    ///////////////////////////////////////////\n    // PIXEL MODE\n    else if (this.unit === 'pixel') {\n      this.displayedAreas.forEach((area) => {\n        // Area with wildcard size\n        if (area.size === null) {\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(1, 1, `100%`, false, false)\n          } else {\n            area.component.setStyleFlex(1, 1, `auto`, false, false)\n          }\n        }\n        // Area with pixel size\n        else {\n          // Only one area > flex-basis 100%\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(0, 0, `100%`, false, false)\n          }\n          // Multiple areas > use each pixel basis\n          else {\n            area.component.setStyleFlex(\n              0,\n              0,\n              `${area.size}px`,\n              area.minSize !== null && area.minSize === area.size ? true : false,\n              area.maxSize !== null && area.maxSize === area.size ? true : false,\n            )\n          }\n        }\n      })\n    }\n  }\n\n  _clickTimeout: number | null = null\n\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\n    const tempPoint = getPointFromEvent(event)\n\n    // Be sure mouseup/touchend happened at same point as mousedown/touchstart to trigger click/dblclick\n    if (this.startPoint && this.startPoint.x === tempPoint.x && this.startPoint.y === tempPoint.y) {\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\n      if (this._clickTimeout !== null) {\n        window.clearTimeout(this._clickTimeout)\n        this._clickTimeout = null\n        this.notify('dblclick', gutterNum)\n        this.stopDragging()\n      }\n      // Else start timeout to call clickEvent at end\n      else {\n        this._clickTimeout = window.setTimeout(() => {\n          this._clickTimeout = null\n          this.notify('click', gutterNum)\n          this.stopDragging()\n        }, this.gutterDblClickDuration)\n      }\n    }\n  }\n\n  public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.startPoint = getPointFromEvent(event)\n    if (this.startPoint === null || this.disabled === true || this.isWaitingClear === true) {\n      return\n    }\n\n    this.snapshot = {\n      gutterNum,\n      lastSteppedOffset: 0,\n      allAreasSizePixel: getElementPixelSize(this.elRef, this.direction) - this.getNbGutters() * this.gutterSize,\n      allInvolvedAreasSizePercent: 100,\n      areasBeforeGutter: [],\n      areasAfterGutter: [],\n    }\n\n    this.displayedAreas.forEach((area) => {\n      const areaSnapshot: IAreaSnapshot = {\n        area,\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, this.direction),\n        sizePercentAtStart: this.unit === 'percent' ? area.size : -1, // If pixel mode, anyway, will not be used.\n      }\n\n      if (area.order < gutterOrder) {\n        if (this.restrictMove === true) {\n          this.snapshot.areasBeforeGutter = [areaSnapshot]\n        } else {\n          this.snapshot.areasBeforeGutter.unshift(areaSnapshot)\n        }\n      } else if (area.order > gutterOrder) {\n        if (this.restrictMove === true) {\n          if (this.snapshot.areasAfterGutter.length === 0) this.snapshot.areasAfterGutter = [areaSnapshot]\n        } else {\n          this.snapshot.areasAfterGutter.push(areaSnapshot)\n        }\n      }\n    })\n\n    this.snapshot.allInvolvedAreasSizePercent = [\n      ...this.snapshot.areasBeforeGutter,\n      ...this.snapshot.areasAfterGutter,\n    ].reduce((t, a) => t + a.sizePercentAtStart, 0)\n\n    if (this.snapshot.areasBeforeGutter.length === 0 || this.snapshot.areasAfterGutter.length === 0) {\n      return\n    }\n\n    this.dragListeners.push(this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)))\n    this.dragListeners.push(this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)))\n    this.dragListeners.push(this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)))\n\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(this.renderer.listen('document', 'mousemove', this.dragEvent.bind(this)))\n      this.dragListeners.push(this.renderer.listen('document', 'touchmove', this.dragEvent.bind(this)))\n    })\n\n    this.displayedAreas.forEach((area) => area.component.lockEvents())\n\n    this.isDragging = true\n    this.renderer.addClass(this.elRef.nativeElement, 'as-dragging')\n    this.renderer.addClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged')\n\n    this.notify('start', this.snapshot.gutterNum)\n  }\n\n  private dragEvent(event: MouseEvent | TouchEvent): void {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this._clickTimeout !== null) {\n      window.clearTimeout(this._clickTimeout)\n      this._clickTimeout = null\n    }\n\n    if (this.isDragging === false) {\n      return\n    }\n\n    this.endPoint = getPointFromEvent(event)\n    if (this.endPoint === null) {\n      return\n    }\n\n    // Calculate steppedOffset\n\n    let offset =\n      this.direction === 'horizontal' ? this.startPoint.x - this.endPoint.x : this.startPoint.y - this.endPoint.y\n    if (this.dir === 'rtl') {\n      offset = -offset\n    }\n    const steppedOffset = Math.round(offset / this.gutterStep) * this.gutterStep\n\n    if (steppedOffset === this.snapshot.lastSteppedOffset) {\n      return\n    }\n\n    this.snapshot.lastSteppedOffset = steppedOffset\n\n    // Need to know if each gutter side areas could reacts to steppedOffset\n\n    let areasBefore = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasBeforeGutter,\n      -steppedOffset,\n      this.snapshot.allAreasSizePixel,\n    )\n    let areasAfter = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasAfterGutter,\n      steppedOffset,\n      this.snapshot.allAreasSizePixel,\n    )\n\n    // Each gutter side areas can't absorb all offset\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\n        areasAfter = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasAfterGutter,\n          steppedOffset + areasBefore.remain,\n          this.snapshot.allAreasSizePixel,\n        )\n      } else {\n        areasBefore = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasBeforeGutter,\n          -(steppedOffset - areasAfter.remain),\n          this.snapshot.allAreasSizePixel,\n        )\n      }\n    }\n    // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\n    else if (areasBefore.remain !== 0) {\n      areasAfter = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasAfterGutter,\n        steppedOffset + areasBefore.remain,\n        this.snapshot.allAreasSizePixel,\n      )\n    }\n    // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\n    else if (areasAfter.remain !== 0) {\n      areasBefore = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasBeforeGutter,\n        -(steppedOffset - areasAfter.remain),\n        this.snapshot.allAreasSizePixel,\n      )\n    }\n\n    if (this.unit === 'percent') {\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\n      const all = [...areasBefore.list, ...areasAfter.list]\n      const areaToReset = all.find(\n        (a) =>\n          a.percentAfterAbsorption !== 0 &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize,\n      )\n\n      if (areaToReset) {\n        areaToReset.percentAfterAbsorption =\n          this.snapshot.allInvolvedAreasSizePercent -\n          all.filter((a) => a !== areaToReset).reduce((total, a) => total + a.percentAfterAbsorption, 0)\n      }\n    }\n\n    // Now we know areas could absorb steppedOffset, time to really update sizes\n\n    areasBefore.list.forEach((item) => updateAreaSize(this.unit, item))\n    areasAfter.list.forEach((item) => updateAreaSize(this.unit, item))\n\n    this.refreshStyleSizes()\n    this.notify('progress', this.snapshot.gutterNum)\n  }\n\n  private stopDragging(event?: Event): void {\n    if (event) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    if (this.isDragging === false) {\n      return\n    }\n\n    this.displayedAreas.forEach((area) => area.component.unlockEvents())\n\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop()\n      if (fct) fct()\n    }\n\n    // Warning: Have to be before \"notify('end')\"\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\n    this.isDragging = false\n\n    // If moved from starting point, notify end\n    if (this.endPoint && (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)) {\n      this.notify('end', this.snapshot.gutterNum)\n    }\n\n    this.renderer.removeClass(this.elRef.nativeElement, 'as-dragging')\n    this.renderer.removeClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged')\n    this.snapshot = null\n    this.isWaitingClear = true\n\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.startPoint = null\n        this.endPoint = null\n        this.isWaitingClear = false\n      })\n    })\n  }\n\n  public notify(type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd', gutterNum: number): void {\n    const sizes = this.getVisibleAreaSizes()\n\n    if (type === 'start') {\n      this.dragStart.emit({ gutterNum, sizes })\n    } else if (type === 'end') {\n      this.dragEnd.emit({ gutterNum, sizes })\n    } else if (type === 'click') {\n      this.gutterClick.emit({ gutterNum, sizes })\n    } else if (type === 'dblclick') {\n      this.gutterDblClick.emit({ gutterNum, sizes })\n    } else if (type === 'transitionEnd') {\n      if (this.transitionEndSubscriber) {\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes))\n      }\n    } else if (type === 'progress') {\n      // Stay outside zone to allow users do what they want about change detection mechanism.\n      this.dragProgressSubject.next({ gutterNum, sizes })\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.stopDragging()\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core'\n\nimport { SplitComponent } from '../component/split.component'\nimport { getInputPositiveNumber, getInputBoolean } from '../utils'\n\n@Directive({\n  selector: 'as-split-area, [as-split-area]',\n  exportAs: 'asSplitArea',\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n  private _order: number | null = null\n\n  @Input() set order(v: number | null) {\n    this._order = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, true, false)\n  }\n\n  get order(): number | null {\n    return this._order\n  }\n\n  ////\n\n  private _size: number | null = null\n\n  @Input() set size(v: number | null) {\n    this._size = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get size(): number | null {\n    return this._size\n  }\n\n  ////\n\n  private _minSize: number | null = null\n\n  @Input() set minSize(v: number | null) {\n    this._minSize = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get minSize(): number | null {\n    return this._minSize\n  }\n\n  ////\n\n  private _maxSize: number | null = null\n\n  @Input() set maxSize(v: number | null) {\n    this._maxSize = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get maxSize(): number | null {\n    return this._maxSize\n  }\n\n  ////\n\n  private _lockSize: boolean = false\n\n  @Input() set lockSize(v: boolean) {\n    this._lockSize = getInputBoolean(v)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get lockSize(): boolean {\n    return this._lockSize\n  }\n\n  ////\n\n  private _visible: boolean = true\n\n  @Input() set visible(v: boolean) {\n    this._visible = getInputBoolean(v)\n\n    if (this._visible) {\n      this.split.showArea(this)\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-hidden')\n    } else {\n      this.split.hideArea(this)\n      this.renderer.addClass(this.elRef.nativeElement, 'as-hidden')\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible\n  }\n\n  ////\n\n  private transitionListener: Function\n  private readonly lockListeners: Array<Function> = []\n\n  constructor(\n    private ngZone: NgZone,\n    public elRef: ElementRef,\n    private renderer: Renderer2,\n    private split: SplitComponent,\n  ) {\n    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area')\n  }\n\n  public ngOnInit(): void {\n    this.split.addArea(this)\n\n    this.ngZone.runOutsideAngular(() => {\n      this.transitionListener = this.renderer.listen(\n        this.elRef.nativeElement,\n        'transitionend',\n        (event: TransitionEvent) => {\n          // Limit only flex-basis transition to trigger the event\n          if (event.propertyName === 'flex-basis') {\n            this.split.notify('transitionEnd', -1)\n          }\n        },\n      )\n    })\n  }\n\n  public setStyleOrder(value: number): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value)\n  }\n\n  public setStyleFlex(grow: number, shrink: number, basis: string, isMin: boolean, isMax: boolean): void {\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis)\n\n    if (isMin === true) this.renderer.addClass(this.elRef.nativeElement, 'as-min')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-min')\n\n    if (isMax === true) this.renderer.addClass(this.elRef.nativeElement, 'as-max')\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-max')\n  }\n\n  public lockEvents(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false))\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false))\n    })\n  }\n\n  public unlockEvents(): void {\n    while (this.lockListeners.length > 0) {\n      const fct = this.lockListeners.pop()\n      if (fct) fct()\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unlockEvents()\n\n    if (this.transitionListener) {\n      this.transitionListener()\n    }\n\n    this.split.removeArea(this)\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { SplitComponent } from './component/split.component'\nimport { SplitAreaDirective } from './directive/splitArea.directive'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SplitComponent, SplitAreaDirective],\n  exports: [SplitComponent, SplitAreaDirective],\n})\nexport class AngularSplitModule {\n  public static forRoot(): ModuleWithProviders<AngularSplitModule> {\n    return {\n      ngModule: AngularSplitModule,\n      providers: [],\n    }\n  }\n\n  public static forChild(): ModuleWithProviders<AngularSplitModule> {\n    return {\n      ngModule: AngularSplitModule,\n      providers: [],\n    }\n  }\n}\n"]}